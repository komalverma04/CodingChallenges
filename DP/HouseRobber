class Solution {
    int solve(vector<int>& nums, int i, vector<int>& dp){
        if(i < 0)return 0;
        if(i == 0) return nums[0];
        if(dp[i] != -1)return dp[i];
        int notTake = solve(nums, i-1, dp);
        int take = solve(nums, i-2, dp) + nums[i];
        return dp[i] = max(take, notTake);

    }
public:
    int rob(vector<int>& nums) {
        int n = nums.size();
        vector<int> dp(n, 0);
        dp[0] = nums[0];
        for(int i = 1; i<n; i++){
        int notTake = dp[i-1];
        int take = i-2 >= 0? dp[i-2] + nums[i] : nums[i];
         dp[i] = max(take, notTake);
        }
        return dp[n-1];
    }
};
