 public:
  int mod = (int) 1e9 + 7;
    int countPartitions(int n, int d, vector<int>& arr) {
        int s = 0;
        for(int i = 0; i<n;i++){
            s += arr[i];
        }
         if((s-d) < 0 || (s-d) % 2 == 1)return 0;
        int sum = (s-d)/2;
       
        vector<vector<int>>dp(n, vector<int>(sum + 1, 0));
        for(int i = 0; i<n;i++){
            dp[i][0] = 1;
        }
        if(arr[0] == 0){
            dp[0][0] = 2;
        }else if(arr[0] <= sum){
            dp[0][arr[0]] = 1;
        }
        for(int i = 1; i < n; i++){
            for(int j = 0; j <= sum; j++){
                int notTake = dp[i-1][j];
                int take = 0;
                if(j >= arr[i]) take = dp[i-1][j-arr[i]];
                dp[i][j] = (take + notTake)%mod;
            }
        }
        return dp[n-1][sum];
    }
