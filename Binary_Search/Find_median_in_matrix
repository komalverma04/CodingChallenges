int solve(vector<vector<int>> &matrix, int r, int c, int k){
        int sum = 0;
        for(int i = 0; i<r;i++){
            int low = 0;
            int high = c-1;
            int ans = c;
            while(low <= high){
                int mid = low + (high - low)/2;
                if(matrix[i][mid]<= k){
                    
                    low = mid + 1;
                }else{
                    ans = mid;
                    high = mid - 1;
                }
            }
            sum += ans;
        }
        return sum;
    }
public:
    int median(vector<vector<int>> &matrix, int r, int c){
        int low = INT_MAX; int req = (r*c)/2;
        int high = INT_MIN;
       for(int i = 0;i<r;i++){
           low = min(low, matrix[i][0]);
           high = max(high, matrix[i][c-1]);
       }
       while(low <= high){
           int mid = low + (high - low)/2;
           int smaller = solve(matrix,r,c,mid);
           if(smaller <= req){
               low = mid + 1;
           }else{
               high = mid - 1;
           }
       }
       return low;
    }
