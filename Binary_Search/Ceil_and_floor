Binary Search


vector<int> getFloorAndCeil(int x, vector<int> &arr) {
        sort(arr.begin(), arr.end());
        int low = 0; int n = arr.size();
        int high = n-1; int ceil = -1; int floor = -1;
        while(low <= high){
            int mid = low + (high - low)/2;
            if(arr[mid] < x){
                low = mid + 1;
            }else{
                ceil = mid;
                high = mid - 1;
            }
        }
        low = 0; high = n-1;
         while(low <= high){
            int mid = low + (high - low)/2;
            if(arr[mid] > x){
                high = mid - 1;
            }else{
                floor = mid;
                low = mid + 1;
            }
        }
        if(floor != -1){
            floor = arr[floor];
        }
         if(ceil != -1){
            ceil = arr[ceil];
        }
        return {floor, ceil};
    }

Linear Search
vector<int> getFloorAndCeil(int x, vector<int> &arr) {
        int n = arr.size();
        int ceil = -1;
        int floor = -1;
        for(int i = 0; i<n;i++){
            if(arr[i] <= x){
                if(floor == -1 || floor < arr[i]){
                    floor = arr[i];
                }
            }
            
            if(arr[i] >= x){
                if(ceil == -1 || ceil > arr[i]){
                    ceil = arr[i];
                }
            }
        }
        return {floor, ceil};
    }
