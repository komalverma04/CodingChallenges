class Solution {
public:
    vector<int> findPeakGrid(vector<vector<int>>& mat) {
        int row = mat.size();
        int col = mat[0].size();
        int low = 0;
        int high = col-1;
        while(low <= high){
            int mid = low + (high - low)/2;
            int maxele = INT_MIN;
            int maxrow = -1;
            for(int i = 0; i<row; i++){
                if(maxele < mat[i][mid]){
                    maxele = mat[i][mid];
                    maxrow = i;
                }
                maxele = max(maxele, mat[i][mid]);
            }
            int left = mid-1>=0? mat[maxrow][mid-1]: INT_MIN;
            int right = mid+1<=col-1? mat[maxrow][mid+1]: INT_MIN;
            if(maxele >= left && maxele >= right){
                return {maxrow, mid};
            }else if(maxele < left){
                high = mid - 1;
            }else{
                low = mid + 1;
            }
        }
        return {-1,-1};
    }
};
