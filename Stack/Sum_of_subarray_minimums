class Solution {
public:
        vector<int> nextse(vector<int>& arr){
            int n = arr.size();
            vector<int>ans(n,n);
            stack<int>st;
            for(int i = n-1; i>=0; i--){
                while(!st.empty() && arr[st.top()] >= arr[i]){
                    st.pop();
                }
                if(!st.empty())ans[i] = st.top();
                st.push(i);
            }
            return ans;
        }

         vector<int> prevse(vector<int>& arr){
            int n = arr.size();
            vector<int>ans(n,-1);
            stack<int>st;
            for(int i = 0; i < n; i++){
                while(!st.empty() && arr[st.top()] > arr[i]){
                    st.pop();
                }
                if(!st.empty())ans[i] = st.top();
                st.push(i);
            }
            return ans;
        }

int mod  = (int)1e9 + 7;
    int sumSubarrayMins(vector<int>& arr) {
        int n = arr.size();
        long long sum = 0;
        vector<int>nse = nextse(arr);
        vector<int>pse = prevse(arr);
        
        for(int i = 0;i<n;i++){
            sum = (sum + ((nse[i]-i)*1LL*(i-pse[i]) * arr[i])%mod)%mod;
        }
        return sum;
    }
};
