class Solution {
public:
    int characterReplacement(string s, int k) {
        int i = 0;
        int j = 0;
        int len = INT_MIN;
        int maxf = 0;
        int n = s.size();
        vector<int>freq(26,0);
        while(j<n){
            freq[s[j] - 'A']++ ;
            maxf = max(maxf, freq[s[j] - 'A']);j++;
            
            while((j-i) - maxf > k){
               freq[s[i++]-'A']--;
            }
            if(j-i-maxf <= k)len = max(len, j-i);
        }
        return len;
    }
};
we are not updating maxf as there is no need for it coz we need to find maximum one and when window squeezes maxf will decrease only which will not 
affect our ultimate answer. 
