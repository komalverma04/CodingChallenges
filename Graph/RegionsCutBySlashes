class Solution {
    vector<int> dr = {-1,0,1,0};
    vector<int> dc = {0,1,0,-1};
    
public:
    void dfs(int i, int j, vector<vector<int>> &matrix){
        if( i<0 || j < 0 || i >= matrix.size() || j >= matrix[0].size() || matrix[i][j] == 1){
            return;
        }
        matrix[i][j] = 1;
        for(int k = 0 ; k<4;k++){
            int nrow = i + dr[k];
            int ncol = j + dc[k];
            dfs(nrow, ncol, matrix);
        }
    }

    int regionsBySlashes(vector<string>& grid) {
        int row = grid.size();
        int col = grid[0].size();
        int ans  = 0;
        vector<vector<int>> matrix(row*3, vector<int>(col*3,0));
        for(int i = 0; i<row; i++){
            for(int j = 0; j<col; j++){
                if(grid[i][j] == '/'){
                    matrix[i*3][j*3 + 2] = 1;
                    matrix[i*3 + 1][j*3 + 1] = 1;
                    matrix[i*3 + 2][j*3 ] = 1;
                }else if(grid[i][j] == '\\'){
                    matrix[i*3][j*3] = 1;
                    matrix[i*3 + 1][j*3 + 1] = 1;
                    matrix[i*3 + 2][j*3 + 2] = 1;
                }
            }
        }
        for(int i = 0; i < matrix.size(); i++){
            for(int j = 0; j < matrix[0].size(); j++){
                if(matrix[i][j] == 0){
                    dfs(i,j,matrix);
                    ans++;
                }
            }
        }
        return ans;
    }
};
