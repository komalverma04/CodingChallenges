1. Brute force
#include <iostream>
#include<bits/stdc++.h>
using namespace std;
int main() {
  string s = "abxacc";
  string t = "abc";
  int n = s.size();
  int m = t.size();
  int i = 0;
  int j = 0;int start = 0;
  while(i<n && j<m){
     
      if(s[i] == t[j]){
          i++; j++;
      }else{
          j = 0;
          i = start+1;
          start++;
      }
  }
 if(j == m){
          cout<<"Match";
      }
    return 0;
}
2. optimal

1. LPS array:-

  string t = "aabcadaabe";
  int n = t.size();
  vector<int>lps(n,0);
  lps[0] = 0;
  int i = 1;
  int len = 0;
  while(i < n){
      if(t[i] == t[len]){
          len++;
          lps[i] = len;
          i++;
      }else{
          if(len != 0){
              len = lps[len-1];
          }else{
              len = 0;
              lps[i] = 0;
              i++;
          }
      }
  }
  for(int i = 0; i<n;i++){
      cout<<lps[i]<<" ";
  }
2. KMP:-
i = 0;
  int j = 0;
  while(i<m && j<n){
      if(s[i] == t[j]){
          i++;
          j++;
          
          if(j == n){
              cout<<"Index of substring is"<<i-j + 1;
              break;
          }
      }else{
          if(j != 0){
              j = lps[j-1];
          }else{
              i++;
          }
      }
  }
